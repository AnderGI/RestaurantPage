/*! For license information please see main.7aacbda8b2ba040a4fc7.js.LICENSE.txt */
(()=>{"use strict";var e={788:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),n.push(u))}},n}},327:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},28:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(327),i=t.n(r),o=t(788),a=t.n(o)()(i());a.push([e.id,'* {\n  box-sizing: border-box;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,\n    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\n  font-size: 16px;\n  --quoteFont: "Kaushan Script", cursive;\n  --backgroundColor: #fafafa;\n  --imgBorderColor: #e5e7e8;\n  --backgroundDisclaimer: black;\n}\n\nbody {\n  padding: 0.5em 2em;\n  padding-top: 0em;\n  min-height: 100vh;\n  margin: 0;\n  background-color: var(--backgroundColor);\n  display: grid;\n}\n\n#content {\n  min-height: 100%;\n  display: grid;\n  grid-template-columns: 1;\n  grid-auto-flow: row;\n}\n\n#content header {\n  height: fit-content;\n  padding: 0.25em 0.5em;\n  position: sticky;\n  top: 0px;\n  z-index: 1;\n  transition: background-color ease 100ms;\n}\n\n#content header > nav {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 1;\n}\n\n#content ul {\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 0;\n}\n\n#content a {\n  text-decoration: none;\n}\n\n#content a.navLink.selected {\n  font-weight: 700;\n  pointer-events: none;\n}\n\n#content ul a {\n  color: black;\n}\n\n#content header.scrolled {\n  background-color: rgba(42, 43, 43, 0.75);\n}\n\n#content header.scrolled * {\n  color: var(--backgroundColor);\n}\n\n#content header > nav nav:first-of-type {\n  width: 30%;\n}\n\n#content header > nav nav:last-of-type {\n  width: 30%;\n}\n\n#content header h1#logo {\n  font-size: 1.5rem;\n}\n\n/*Home Page*/\nmain section#mainBanner {\n  width: 100%;\n  height: 30em;\n  position: relative;\n  border: 1px solid var(--imgBorderColor);\n}\n\nmain section#mainBanner img {\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n}\n\nmain section#mainBanner blockquote {\n  position: absolute;\n  right: 50%;\n  transform: translateX(50%);\n  bottom: 0.5em;\n  font-size: 1.25rem;\n  font-style: italic;\n  font-family: var(--quoteFont);\n  color: var(--backgroundColor);\n  letter-spacing: 0.1em;\n}\n\nmain section#disclaimer {\n  margin-top: 2em;\n  background-color: var(--backgroundDisclaimer);\n  text-align: center;\n  color: var(--backgroundColor);\n  padding: 2em 0.2em;\n}\n\nmain section#disclaimer a {\n  color: red;\n}\n\nmain section#disclaimer h1 {\n  font-size: 2rem;\n  letter-spacing: 0.1em;\n}\n\nmain section#disclaimer form {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 1.5em;\n}\n\nmain section#disclaimer form input[type="submit"] {\n  background-color: var(--backgroundColor);\n  border: none;\n  padding: 0.5em 2em;\n}\n\nmain section#disclaimer form input[type="submit"]:hover {\n  cursor: pointer;\n}\n/*End of Home Page*/\n\n/*Menu Page*/\nmain.menu {\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-auto-flow: row;\n  row-gap: 2em;\n}\n\nmain.menu .dish {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: 1fr;\n  row-gap: 0.5em;\n  width: 60%;\n  margin: auto;\n}\n\n.dish-image {\n  width: 300px; /* Adjust the size as needed */\n  height: 250px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n}\n.dish-image img {\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.dish-details h2 {\n  font-size: 1rem;\n}\n\n.dish-details p {\n  margin: 5px 0;\n  font-size: 0.8rem;\n}\n\n.dish-image,\n.dish-details {\n  transition: opacity ease 20ms, filter ease 20ms, scale ease 20ms;\n}\n\n.dish-image.hovered,\n.dish-details.hovered {\n  opacity: 0.7;\n  filter: blur(0.2em);\n  transform: scale(0.9);\n}\n\n/*Nearest Hospital Main Page (google maps api)*/\n#map {\n  height: 500px;\n}\n\n/*End of Nearest Hospital Main Page*/\n\n/*Contact Us Page*/\nmain.contactUs {\n  display: grid;\n  grid-template-rows: 80% 20%;\n  grid-template-columns: 1fr;\n  position: relative;\n}\n\nmain.contactUs span {\n  content: "";\n  position: absolute;\n  height: 0.5em;\n  width: 20%;\n  top: -1em;\n  left: 50%;\n  transform: translate(-50%);\n  background-color: var(--imgBorderColor);\n  border-radius: 1px;\n}\n\nmain.contactUs address {\n  text-align: center;\n}\n\nmain.contactUs address p {\n  font-size: 2rem;\n  font-weight: 900;\n}\n\n/*End of Contact Us Page*/\n\n/*End of Menu Page*/\n#content footer {\n  text-align: center;\n  letter-spacing: 0.1em;\n  padding: 0.75em 0.5em;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB;wEACsE;EACtE,eAAe;EACf,sCAAsC;EACtC,0BAA0B;EAC1B,yBAAyB;EACzB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,iBAAiB;EACjB,SAAS;EACT,wCAAwC;EACxC,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,wBAAwB;EACxB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,qBAAqB;EACrB,gBAAgB;EAChB,QAAQ;EACR,UAAU;EACV,uCAAuC;AACzC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iBAAiB;AACnB;;AAEA,YAAY;AACZ;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,uCAAuC;AACzC;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,0BAA0B;EAC1B,aAAa;EACb,kBAAkB;EAClB,kBAAkB;EAClB,6BAA6B;EAC7B,6BAA6B;EAC7B,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,6CAA6C;EAC7C,kBAAkB;EAClB,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,wCAAwC;EACxC,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;AACA,mBAAmB;;AAEnB,YAAY;AACZ;EACE,aAAa;EACb,qCAAqC;EACrC,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,uBAAuB;EACvB,cAAc;EACd,UAAU;EACV,YAAY;AACd;;AAEA;EACE,YAAY,EAAE,8BAA8B;EAC5C,aAAa;EACb,uCAAuC;AACzC;AACA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,oBAAoB;AACtB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,iBAAiB;AACnB;;AAEA;;EAEE,gEAAgE;AAClE;;AAEA;;EAEE,YAAY;EACZ,mBAAmB;EACnB,qBAAqB;AACvB;;AAEA,+CAA+C;AAC/C;EACE,aAAa;AACf;;AAEA,oCAAoC;;AAEpC,kBAAkB;AAClB;EACE,aAAa;EACb,2BAA2B;EAC3B,0BAA0B;EAC1B,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,UAAU;EACV,SAAS;EACT,SAAS;EACT,0BAA0B;EAC1B,uCAAuC;EACvC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA,yBAAyB;;AAEzB,mBAAmB;AACnB;EACE,kBAAkB;EAClB,qBAAqB;EACrB,qBAAqB;AACvB",sourcesContent:['* {\r\n  box-sizing: border-box;\r\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,\r\n    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;\r\n  font-size: 16px;\r\n  --quoteFont: "Kaushan Script", cursive;\r\n  --backgroundColor: #fafafa;\r\n  --imgBorderColor: #e5e7e8;\r\n  --backgroundDisclaimer: black;\r\n}\r\n\r\nbody {\r\n  padding: 0.5em 2em;\r\n  padding-top: 0em;\r\n  min-height: 100vh;\r\n  margin: 0;\r\n  background-color: var(--backgroundColor);\r\n  display: grid;\r\n}\r\n\r\n#content {\r\n  min-height: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1;\r\n  grid-auto-flow: row;\r\n}\r\n\r\n#content header {\r\n  height: fit-content;\r\n  padding: 0.25em 0.5em;\r\n  position: sticky;\r\n  top: 0px;\r\n  z-index: 1;\r\n  transition: background-color ease 100ms;\r\n}\r\n\r\n#content header > nav {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  z-index: 1;\r\n}\r\n\r\n#content ul {\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  padding: 0;\r\n}\r\n\r\n#content a {\r\n  text-decoration: none;\r\n}\r\n\r\n#content a.navLink.selected {\r\n  font-weight: 700;\r\n  pointer-events: none;\r\n}\r\n\r\n#content ul a {\r\n  color: black;\r\n}\r\n\r\n#content header.scrolled {\r\n  background-color: rgba(42, 43, 43, 0.75);\r\n}\r\n\r\n#content header.scrolled * {\r\n  color: var(--backgroundColor);\r\n}\r\n\r\n#content header > nav nav:first-of-type {\r\n  width: 30%;\r\n}\r\n\r\n#content header > nav nav:last-of-type {\r\n  width: 30%;\r\n}\r\n\r\n#content header h1#logo {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n/*Home Page*/\r\nmain section#mainBanner {\r\n  width: 100%;\r\n  height: 30em;\r\n  position: relative;\r\n  border: 1px solid var(--imgBorderColor);\r\n}\r\n\r\nmain section#mainBanner img {\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nmain section#mainBanner blockquote {\r\n  position: absolute;\r\n  right: 50%;\r\n  transform: translateX(50%);\r\n  bottom: 0.5em;\r\n  font-size: 1.25rem;\r\n  font-style: italic;\r\n  font-family: var(--quoteFont);\r\n  color: var(--backgroundColor);\r\n  letter-spacing: 0.1em;\r\n}\r\n\r\nmain section#disclaimer {\r\n  margin-top: 2em;\r\n  background-color: var(--backgroundDisclaimer);\r\n  text-align: center;\r\n  color: var(--backgroundColor);\r\n  padding: 2em 0.2em;\r\n}\r\n\r\nmain section#disclaimer a {\r\n  color: red;\r\n}\r\n\r\nmain section#disclaimer h1 {\r\n  font-size: 2rem;\r\n  letter-spacing: 0.1em;\r\n}\r\n\r\nmain section#disclaimer form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  row-gap: 1.5em;\r\n}\r\n\r\nmain section#disclaimer form input[type="submit"] {\r\n  background-color: var(--backgroundColor);\r\n  border: none;\r\n  padding: 0.5em 2em;\r\n}\r\n\r\nmain section#disclaimer form input[type="submit"]:hover {\r\n  cursor: pointer;\r\n}\r\n/*End of Home Page*/\r\n\r\n/*Menu Page*/\r\nmain.menu {\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  grid-auto-flow: row;\r\n  row-gap: 2em;\r\n}\r\n\r\nmain.menu .dish {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 1fr;\r\n  row-gap: 0.5em;\r\n  width: 60%;\r\n  margin: auto;\r\n}\r\n\r\n.dish-image {\r\n  width: 300px; /* Adjust the size as needed */\r\n  height: 250px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n}\r\n.dish-image img {\r\n  object-fit: cover;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n}\r\n\r\n.dish-details h2 {\r\n  font-size: 1rem;\r\n}\r\n\r\n.dish-details p {\r\n  margin: 5px 0;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.dish-image,\r\n.dish-details {\r\n  transition: opacity ease 20ms, filter ease 20ms, scale ease 20ms;\r\n}\r\n\r\n.dish-image.hovered,\r\n.dish-details.hovered {\r\n  opacity: 0.7;\r\n  filter: blur(0.2em);\r\n  transform: scale(0.9);\r\n}\r\n\r\n/*Nearest Hospital Main Page (google maps api)*/\r\n#map {\r\n  height: 500px;\r\n}\r\n\r\n/*End of Nearest Hospital Main Page*/\r\n\r\n/*Contact Us Page*/\r\nmain.contactUs {\r\n  display: grid;\r\n  grid-template-rows: 80% 20%;\r\n  grid-template-columns: 1fr;\r\n  position: relative;\r\n}\r\n\r\nmain.contactUs span {\r\n  content: "";\r\n  position: absolute;\r\n  height: 0.5em;\r\n  width: 20%;\r\n  top: -1em;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  background-color: var(--imgBorderColor);\r\n  border-radius: 1px;\r\n}\r\n\r\nmain.contactUs address {\r\n  text-align: center;\r\n}\r\n\r\nmain.contactUs address p {\r\n  font-size: 2rem;\r\n  font-weight: 900;\r\n}\r\n\r\n/*End of Contact Us Page*/\r\n\r\n/*End of Menu Page*/\r\n#content footer {\r\n  text-align: center;\r\n  letter-spacing: 0.1em;\r\n  padding: 0.75em 0.5em;\r\n}\r\n'],sourceRoot:""}]);const c=a},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var A=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=i(p,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}a.push(d)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=t(o[a]);n[c].references--}for(var s=r(e,i),l=0;l<o.length;l++){var u=t(o[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!e;)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),o=t(569),a=t.n(o),c=t(565),s=t.n(c),l=t(216),u=t.n(l),d=t(589),A=t.n(d),p=t(28),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var f=function(e){return document.querySelector(e)},h=function(e){return document.querySelectorAll(e)};function g(){var e=f("div#content header"),n=e.offsetHeight;window.scrollY>n?e.classList.add("scrolled"):e.classList.remove("scrolled")}const v=t.p+"412889c399831bc2c44beeb94370c53b.jpg",y=t.p+"865efa9a3a4e0e577fc71c66dfb4d44b.jpg",b=t.p+"92c1bb721468a8d0e509d4fb1973c7b6.png",E=t.p+"cf25ee55f763b990b8bf1b22944e71fa.png",C=t.p+"f3108bb4063d73caf923db9f32a75b3f.png",B=t.p+"98a2b0e4c464357f8559794e17a839ce.png",w=t.p+"9745d5fbbc05f579fdb2803c4b890f0b.png",x=t.p+"e2ed4215d4bee12765ecf2cb221e8f54.png",k=t.p+"b75c1e1a5bb44ee62843e0fc658c8329.png",S=t.p+"ca3817bd1cdbfaadb46cc1e0ba615a58.jpg",I=t.p+"d0b5bcef1eae12e4b7e20eb01a81d132.jpg";function L(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var j=[{name:"Single Bypass Burger",price:9.7,discount:!1,extraIngredients:"5 bacon slices",extraIngredientsPrice:.92,image:y},{name:"Double Bypass Burger",price:11.55,discount:!1,extraIngredients:"10 bacon slices",extraIngredientsPrice:1.85,image:b},{name:"Triple Bypass Burger",price:13.63,discount:!1,extraIngredients:"15 bacon slices",extraIngredientsPrice:2.75,image:E},{name:"Quadruple Bypass Burger",price:15.01,discount:!1,extraIngredients:"20 bacon slices",extraIngredientsPrice:3.7,image:C},{name:"Quintuple Bypass Burger",price:18.01,discount:!1,extraIngredients:"25 bacon slices",extraIngredientsPrice:4.62,image:B},{name:"Sextuple Bypass Burger",price:20.09,discount:!1,extraIngredients:"30 bacon slices",extraIngredientsPrice:5.64,image:w},{name:"Septuple Bypass Burger",price:21.02,discount:!1,extraIngredients:"35 bacon slices",extraIngredientsPrice:6.47,image:x},{name:"Octuple Bypass Burger",price:24.02,discount:!1,extraIngredients:"40 bacon slices",extraIngredientsPrice:7.39,image:k},{name:"1/2 Pound Coromary Dog",price:9.47,discount:!1,extraIngredients:"10 bacon slices",extraIngredientsPrice:1.85,image:S},{name:"Curvyliner Fries",price:9.65,discount:!1,extraIngredients:"Extra Butter Souce",extraIngredientsPrice:2.98,image:t.p+"c6101b6b5fa4591340c7bc6f3a14dfbe.jpg"},{name:"ButterFat Shake",price:4.62,discount:!1,extraIngredients:"Extra butter fat",extraIngredientsPrice:4.2,image:I},{name:"1/2 Fatty Chessecake with white chocolateand organic butter",price:16.25,discount:!1,extraIngredients:"Healthy berries buried with chocolate",extraIngredientsPrice:5.7,image:t.p+"b213582648a300495b8d49afd751c46d.jpg"}];function P(){var e=document.createElement("footer");return e.innerHTML="<p>Tempting fate, one burger at a time.</p>",e}function T(){T=function(){return e};var e={},n=Object.prototype,t=n.hasOwnProperty,r=Object.defineProperty||function(e,n,t){e[n]=t.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function s(e,n,t){return Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}),e[n]}try{s({},"")}catch(e){s=function(e,n,t){return e[n]=t}}function l(e,n,t,i){var o=n&&n.prototype instanceof A?n:A,a=Object.create(o.prototype),c=new x(i||[]);return r(a,"_invoke",{value:E(e,t,c)}),a}function u(e,n,t){try{return{type:"normal",arg:e.call(n,t)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var d={};function A(){}function p(){}function m(){}var f={};s(f,o,(function(){return this}));var h=Object.getPrototypeOf,g=h&&h(h(k([])));g&&g!==n&&t.call(g,o)&&(f=g);var v=m.prototype=A.prototype=Object.create(f);function y(e){["next","throw","return"].forEach((function(n){s(e,n,(function(e){return this._invoke(n,e)}))}))}function b(e,n){function i(r,o,a,c){var s=u(e[r],e,o);if("throw"!==s.type){var l=s.arg,d=l.value;return d&&"object"==M(d)&&t.call(d,"__await")?n.resolve(d.__await).then((function(e){i("next",e,a,c)}),(function(e){i("throw",e,a,c)})):n.resolve(d).then((function(e){l.value=e,a(l)}),(function(e){return i("throw",e,a,c)}))}c(s.arg)}var o;r(this,"_invoke",{value:function(e,t){function r(){return new n((function(n,r){i(e,t,n,r)}))}return o=o?o.then(r,r):r()}})}function E(e,n,t){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return{value:void 0,done:!0}}for(t.method=i,t.arg=o;;){var a=t.delegate;if(a){var c=C(a,t);if(c){if(c===d)continue;return c}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var s=u(e,n,t);if("normal"===s.type){if(r=t.done?"completed":"suspendedYield",s.arg===d)continue;return{value:s.arg,done:t.done}}"throw"===s.type&&(r="completed",t.method="throw",t.arg=s.arg)}}}function C(e,n){var t=n.method,r=e.iterator[t];if(void 0===r)return n.delegate=null,"throw"===t&&e.iterator.return&&(n.method="return",n.arg=void 0,C(e,n),"throw"===n.method)||"return"!==t&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+t+"' method")),d;var i=u(r,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,d;var o=i.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,d):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,d)}function B(e){var n={tryLoc:e[0]};1 in e&&(n.catchLoc=e[1]),2 in e&&(n.finallyLoc=e[2],n.afterLoc=e[3]),this.tryEntries.push(n)}function w(e){var n=e.completion||{};n.type="normal",delete n.arg,e.completion=n}function x(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(B,this),this.reset(!0)}function k(e){if(e){var n=e[o];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function n(){for(;++r<e.length;)if(t.call(e,r))return n.value=e[r],n.done=!1,n;return n.value=void 0,n.done=!0,n};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return p.prototype=m,r(v,"constructor",{value:m,configurable:!0}),r(m,"constructor",{value:p,configurable:!0}),p.displayName=s(m,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var n="function"==typeof e&&e.constructor;return!!n&&(n===p||"GeneratorFunction"===(n.displayName||n.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,s(e,c,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},y(b.prototype),s(b.prototype,a,(function(){return this})),e.AsyncIterator=b,e.async=function(n,t,r,i,o){void 0===o&&(o=Promise);var a=new b(l(n,t,r,i),o);return e.isGeneratorFunction(t)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},y(v),s(v,c,"Generator"),s(v,o,(function(){return this})),s(v,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var n=Object(e),t=[];for(var r in n)t.push(r);return t.reverse(),function e(){for(;t.length;){var r=t.pop();if(r in n)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=k,x.prototype={constructor:x,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!e)for(var n in this)"t"===n.charAt(0)&&t.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(t,r){return a.type="throw",a.arg=e,n.next=t,r&&(n.method="next",n.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var c=t.call(o,"catchLoc"),s=t.call(o,"finallyLoc");if(c&&s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,n){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=n&&n<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=n,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(a)},complete:function(e,n){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&n&&(this.next=n),d},finish:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),w(t),d}},catch:function(e){for(var n=this.tryEntries.length-1;n>=0;--n){var t=this.tryEntries[n];if(t.tryLoc===e){var r=t.completion;if("throw"===r.type){var i=r.arg;w(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,t){return this.delegate={iterator:k(e),resultName:n,nextLoc:t},"next"===this.method&&(this.arg=void 0),d}},e}function O(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}function U(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==M(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!==M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===M(i)?i:String(i)),r)}var i}function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}var N,q=function e(n,t){if(n===t)return!0;if(n&&t&&"object"==M(n)&&"object"==M(t)){if(n.constructor!==t.constructor)return!1;var r,i,o;if(Array.isArray(n)){if((r=n.length)!=t.length)return!1;for(i=r;0!=i--;)if(!e(n[i],t[i]))return!1;return!0}if(n.constructor===RegExp)return n.source===t.source&&n.flags===t.flags;if(n.valueOf!==Object.prototype.valueOf)return n.valueOf()===t.valueOf();if(n.toString!==Object.prototype.toString)return n.toString()===t.toString();if((r=(o=Object.keys(n)).length)!==Object.keys(t).length)return!1;for(i=r;0!=i--;)if(!Object.prototype.hasOwnProperty.call(t,o[i]))return!1;for(i=r;0!=i--;){var a=o[i];if(!e(n[a],t[a]))return!1}return!0}return n!=n&&t!=t},z="__googleMapsScriptId";!function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.LOADING=1]="LOADING",e[e.SUCCESS=2]="SUCCESS",e[e.FAILURE=3]="FAILURE"}(N||(N={}));var _=new(function(){function e(n){var t=n.apiKey,r=n.authReferrerPolicy,i=n.channel,o=n.client,a=n.id,c=void 0===a?z:a,s=n.language,l=n.libraries,u=void 0===l?[]:l,d=n.mapIds,A=n.nonce,p=n.region,m=n.retries,f=void 0===m?3:m,h=n.url,g=void 0===h?"https://maps.googleapis.com/maps/api/js":h,v=n.version;if(function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=t,this.authReferrerPolicy=r,this.channel=i,this.client=o,this.id=c||z,this.language=s,this.libraries=u,this.mapIds=d,this.nonce=A,this.region=p,this.retries=f,this.url=g,this.version=v,e.instance){if(!q(this.options,e.instance.options))throw new Error("Loader must not be called again with different options. ".concat(JSON.stringify(this.options)," !== ").concat(JSON.stringify(e.instance.options)));return e.instance}e.instance=this}var n,t;return n=e,t=[{key:"options",get:function(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}},{key:"status",get:function(){return this.errors.length?N.FAILURE:this.done?N.SUCCESS:this.loading?N.LOADING:N.INITIALIZED}},{key:"failed",get:function(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}},{key:"createUrl",value:function(){var e=this.url;return e+="?callback=__googleMapsCallback",this.apiKey&&(e+="&key=".concat(this.apiKey)),this.channel&&(e+="&channel=".concat(this.channel)),this.client&&(e+="&client=".concat(this.client)),this.libraries.length>0&&(e+="&libraries=".concat(this.libraries.join(","))),this.language&&(e+="&language=".concat(this.language)),this.region&&(e+="&region=".concat(this.region)),this.version&&(e+="&v=".concat(this.version)),this.mapIds&&(e+="&map_ids=".concat(this.mapIds.join(","))),this.authReferrerPolicy&&(e+="&auth_referrer_policy=".concat(this.authReferrerPolicy)),e}},{key:"deleteScript",value:function(){var e=document.getElementById(this.id);e&&e.remove()}},{key:"load",value:function(){return this.loadPromise()}},{key:"loadPromise",value:function(){var e=this;return new Promise((function(n,t){e.loadCallback((function(e){e?t(e.error):n(window.google)}))}))}},{key:"importLibrary",value:function(e){return this.execute(),google.maps.importLibrary(e)}},{key:"loadCallback",value:function(e){this.callbacks.push(e),this.execute()}},{key:"setScript",value:function(){var e,n,t=this;if(document.getElementById(this.id))this.callback();else{var r,i,o,a,c,s,l,u,d,A,p,m,f,h={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(h).forEach((function(e){return!h[e]&&delete h[e]})),(null===(n=null===(e=null===window||void 0===window?void 0:window.google)||void 0===e?void 0:e.maps)||void 0===n?void 0:n.importLibrary)||(r=h,c="The Google Maps JavaScript API",s="google",l="importLibrary",u="__ib__",d=document,A=window,p=(A=A[s]||(A[s]={})).maps||(A.maps={}),m=new Set,f=new URLSearchParams,p[l]?console.warn(c+" only loads once. Ignoring:",r):p[l]=function(e){for(var n=arguments.length,A=new Array(n>1?n-1:0),h=1;h<n;h++)A[h-1]=arguments[h];return m.add(e)&&(i||(i=new Promise((function(e,n){return l=t,A=void 0,h=void 0,g=T().mark((function t(){var l;return T().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,o=d.createElement("script");case 2:for(a in o.id=this.id,f.set("libraries",(function(e){if(Array.isArray(e))return O(e)}(A=m)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(A)||function(e,n){if(e){if("string"==typeof e)return O(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?O(e,n):void 0}}(A)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())+""),r)f.set(a.replace(/[A-Z]/g,(function(e){return"_"+e[0].toLowerCase()})),r[a]);f.set("callback",s+".maps."+u),o.src=this.url+"?"+f,p[u]=e,o.onerror=function(){return i=n(Error(c+" could not load."))},o.nonce=this.nonce||(null===(l=d.querySelector("script[nonce]"))||void 0===l?void 0:l.nonce)||"",d.head.append(o);case 11:case"end":return t.stop()}var A}),t,this)})),new(h||(h=Promise))((function(e,n){function t(e){try{i(g.next(e))}catch(e){n(e)}}function r(e){try{i(g.throw(e))}catch(e){n(e)}}function i(n){var i;n.done?e(n.value):(i=n.value,i instanceof h?i:new h((function(e){e(i)}))).then(t,r)}i((g=g.apply(l,A||[])).next())}));var l,A,h,g})))).then((function(){return p[l].apply(p,[e].concat(A))}))});var g=this.libraries.map((function(e){return t.importLibrary(e)}));g.length||g.push(this.importLibrary("core")),Promise.all(g).then((function(){return t.callback()}),(function(e){var n=new ErrorEvent("error",{error:e});t.loadErrorCallback(n)}))}}},{key:"reset",value:function(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}},{key:"resetIfRetryingFailed",value:function(){this.failed&&this.reset()}},{key:"loadErrorCallback",value:function(e){var n=this;if(this.errors.push(e),this.errors.length<=this.retries){var t=this.errors.length*Math.pow(2,this.errors.length);console.error("Failed to load Google Maps script, retrying in ".concat(t," ms.")),setTimeout((function(){n.deleteScript(),n.setScript()}),t)}else this.onerrorEvent=e,this.callback()}},{key:"callback",value:function(){var e=this;this.done=!0,this.loading=!1,this.callbacks.forEach((function(n){n(e.onerrorEvent)})),this.callbacks=[]}},{key:"execute",value:function(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading||(this.loading=!0,this.setScript())}}}],t&&U(n.prototype,t),Object.defineProperty(n,"prototype",{writable:!1}),e}())({apiKey:"AIzaSyBF4W-L7n1LdKmWnIkaonfFMQdUZ1BOBjk",version:"weekly"});function F(e){return function(e){if(Array.isArray(e))return R(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return R(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?R(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var Y=f("#content");function Z(){f("#content main").replaceChildren()}function H(){var e;Z(),mainTag.classList.contains("menu")&&mainTag.classList.remove("menu"),(e=mainTag).append.apply(e,F(function(){var e=document.createElement("section");e.setAttribute("id","mainBanner");var n=document.createElement("img");n.src=v,e.append(n);var t=document.createElement("blockquote");t.append("Fighting anorexia since 2005"),e.appendChild(t);var r=document.createElement("section");r.setAttribute("id","disclaimer");var i=document.createElement("h1");i.append("Disclaimer"),r.append(i);var o=document.createElement("blockquote");o.append("Our dishes defy the laws of portion control, cholesterol sanity, and common sense."),r.append(o);var a=document.createElement("form");a.setAttribute("action","#"),a.setAttribute("method","get");var c=document.createElement("section"),s=document.createElement("input");s.setAttribute("type","checkbox"),s.setAttribute("name","disclaimer"),s.setAttribute("value","checked"),s.setAttribute("id","disclaimer"),c.appendChild(s);var l=document.createElement("label");l.setAttribute("for","disclaimer"),l.innerHTML='I have read the <a href="#">disclaimer</a> and agreed to the <a href="#">terms of service</a>',c.appendChild(l),a.appendChild(c);var u=document.createElement("input");return u.setAttribute("type","submit"),u.setAttribute("value","I Accept"),a.appendChild(u),r.appendChild(a),[e,r]}())),mainTag.append(P()),Y.append(mainTag)}function D(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var G={home:H,menu:function(){var e;Z(),mainTag.setAttribute("class","menu"),(e=mainTag).append.apply(e,F(function(){var e,n=[],t=function(e,n){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=function(e,n){if(e){if("string"==typeof e)return L(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?L(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){t&&(e=t);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,c=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return a=e.done,e},e:function(e){c=!0,o=e},f:function(){try{a||null==t.return||t.return()}finally{if(c)throw o}}}}(j);try{for(t.s();!(e=t.n()).done;){var r=e.value,i=r.name,o=r.price,a=(r.discount,r.extraIngredients),c=r.extraIngredientsPrice,s=r.image,l=document.createElement("div");l.setAttribute("class","dish");var u=document.createElement("div"),d=document.createElement("img");d.src=s,u.append(d),u.setAttribute("class","dish-image"),l.append(u);var A=document.createElement("div");A.setAttribute("class","dish-details");var p=document.createElement("h2");p.textContent=i,A.append(p);for(var m=1;m<=3;m++){var f=document.createElement("p");1===m&&(f.textContent="Price : $".concat(o)),2===m&&(f.textContent="Extra Ingredients : ".concat(a)),3===m&&(f.textContent="Extra Ingredients Price : $".concat(c)),A.append(f)}A.classList.add("hovered"),l.append(A),n.push(l)}}catch(e){t.e(e)}finally{t.f()}return n}())),mainTag.append(P()),F(h("div.dish div")).forEach((function(e){e.addEventListener("mouseover",(function(e){!function(e){var n=e.target;n.classList.contains("hovered")&&(n.classList.remove("hovered"),n.classList.contains("dish-image")&&n.nextElementSibling.classList.add("hovered"),n.classList.contains("dish-details")&&n.previousElementSibling.classList.add("hovered"))}(e)}))}))},"contact us":function(){Z(),mainTag.classList.contains("menu")&&mainTag.classList.remove("menu"),mainTag.classList.add("contactUs"),mainTag.append(function(){for(var e=document.createElement("address"),n=0,t=Object.values({street:"450 FREMONT STREET in DOWNTOWN LAS VEGAS",phone:"702-901-1835"});n<t.length;n++){var r=t[n],i=document.createElement("p");i.textContent=r,e.append(i)}return e.append(document.createElement("span")),e}()),mainTag.append(P())},"nearest hospital":function(){var e;Z(),mainTag.classList.contains("menu")&&mainTag.classList.remove("menu"),mainTag.classList.contains("contactUs")&&mainTag.classList.remove("menu"),mainTag.append(((e=document.createElement("div")).setAttribute("id","map"),e)),mainTag.append(P()),_.load().then((function(){var e,n,t;n={center:e={lat:36.2859308,lng:-115.092762},zoom:15,mapTypeId:"satellite"},t={position:e,map:new google.maps.Map(document.getElementById("map"),n),title:"North Las Vegas VA Medical Center"},new google.maps.Marker(t)}))}};function W(){var e;(e=h("#content a.navLink"),function(e){if(Array.isArray(e))return D(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(e){if("string"==typeof e)return D(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?D(e,n):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).filter((function(e){return e.classList.contains("selected")})).forEach((function(e){return e.classList.remove("selected")})),this.classList.add("selected"),G[this.textContent.toLowerCase()]()}window.addEventListener("DOMContentLoaded",(function(){Y.append(function(){for(var e=document.createElement("header"),n=document.createElement("nav"),t=document.createElement("nav"),r=document.createElement("ul"),i=1;i<=3;i++){var o=document.createElement("li"),a=document.createElement("a");a.setAttribute("href","#"),a.setAttribute("class","navLink"),1===i?(a.classList.add("selected"),a.append("Home")):2===i?a.append("Menu"):a.append("Contact Us"),o.appendChild(a),r.append(o)}t.appendChild(r),n.appendChild(t);var c=document.createElement("h1");c.setAttribute("id","logo"),c.append("Heart Attack Grill"),n.appendChild(c);var s=document.createElement("nav");return s.innerHTML='<ul><li><a href="#" class="navLink">Nearest Hospital</a></li></ul>',n.appendChild(s),e.appendChild(n),e}()),F(h("header a")).forEach((function(e){e.addEventListener("click",W)})),window.addEventListener("scroll",g),Y.appendChild(document.createElement("main")),H()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,